<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.system.recruit.dao.HrDepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.system.recruit.entity.HrDepartment" >
    <id column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="parent_department_id" property="parentDepartmentId" jdbcType="INTEGER" />
    <result column="department_desctibe" property="departmentDesctibe" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    department_id, department_name, parent_department_id , department_desctibe
  </sql>

  <select id="selectByName" resultType="java.lang.String" parameterType="java.lang.String" >
    select
    department_id
    from hr_department
    where department_name = #{departmentName,jdbcType=VARCHAR}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from hr_department
    where department_id = #{departmentId,jdbcType=INTEGER}
  </select>
  <select id="selectAllDepartment" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from hr_department order By department_id
  </select>
  <select id="selectDepartmentList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from hr_department a , hr_user_department b where a.user_id = #{userId,jdbcType=INTEGER} and a.department_id = b.department_id order By department_id
  </select>
  <select id="selectByParentId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from hr_department where parent_department_id = #{parentDepartmentId,jdbcType=INTEGER} order By department_id
  </select>

  <select id="selectByParentIds" resultType="string" parameterType="list" >
    select
    department_id
    from hr_department where
    parent_department_id in
    <foreach  item="item" collection="parentDepartmentIds" index="index"  open="(" separator="," close=")">
      #{item}
    </foreach>
    order By department_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hr_department
    where department_id = #{departmentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.system.recruit.entity.HrDepartment" >
    insert into hr_department (department_id, department_name, parent_department_id,
      department_desctibe)
    values (#{departmentId,jdbcType=INTEGER}, #{departmentName,jdbcType=VARCHAR}, #{parentDepartmentId,jdbcType=INTEGER},
      #{departmentDesctibe,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.system.recruit.entity.HrDepartment" >
    insert into hr_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="departmentName != null" >
        department_name,
      </if>
      <if test="parentDepartmentId != null" >
        parent_department_id,
      </if>
      <if test="departmentDesctibe != null" >
        department_desctibe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null" >
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentDepartmentId != null" >
        #{parentDepartmentId,jdbcType=INTEGER},
      </if>
      <if test="departmentDesctibe != null" >
        #{departmentDesctibe,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.recruit.entity.HrDepartment" >
    update hr_department
    <set >
      <if test="departmentName != null" >
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentDepartmentId != null" >
        parent_department_id = #{parentDepartmentId,jdbcType=INTEGER},
      </if>
      <if test="departmentDesctibe != null" >
        department_desctibe = #{departmentDesctibe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.system.recruit.entity.HrDepartment" >
    update hr_department
    set department_name = #{departmentName,jdbcType=VARCHAR},
      parent_department_id = #{parentDepartmentId,jdbcType=INTEGER},
      department_desctibe = #{departmentDesctibe,jdbcType=LONGVARCHAR}
    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.recruit.entity.HrDepartment" >
    update hr_department
    set department_name = #{departmentName,jdbcType=VARCHAR},
      parent_department_id = #{parentDepartmentId,jdbcType=INTEGER}
    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
</mapper>
